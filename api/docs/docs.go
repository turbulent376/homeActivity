// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Nikita Zaitsev",
            "email": "nikita.zaitsev@teamlabs.cc"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/billing/apple": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "summary": "webhook for apple payments receive",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/billing/payment": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "summary": "request for registering payment",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/billing.MakePayment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/billing.Payment"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/billing/product": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "summary": "creating product request",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/billing.CreateProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/billing.Product"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/billing/product/{productId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "summary": "getting product information by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid of product",
                        "name": "productId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/billing.Product"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "summary": "update product information by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid of product",
                        "name": "productId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/billing.UpdateProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/billing.Product"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "billing"
                ],
                "summary": "delete product by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid of product",
                        "name": "productId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/billing/products": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "summary": "request for getting list of products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/billing.Product"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/licence/licences": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "license"
                ],
                "summary": "getting all licenses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/license.License"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "license"
                ],
                "summary": "create license information",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/license.CreateLicenseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/license.License"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/licence/licences/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "license"
                ],
                "summary": "get license information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "license id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/license.License"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/licence/user/{userId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "license"
                ],
                "summary": "getting user licenses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user identification number",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/license.UserLicenses"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "billing.CreateProduct": {
            "type": "object",
            "required": [
                "licenseId",
                "name"
            ],
            "properties": {
                "licenseId": {
                    "description": "LicenseId identification number of license",
                    "type": "string"
                },
                "name": {
                    "description": "Name of product",
                    "type": "string"
                }
            }
        },
        "billing.MakePayment": {
            "type": "object",
            "required": [
                "orderId",
                "productId",
                "transaction",
                "userId"
            ],
            "properties": {
                "orderId": {
                    "description": "OrderId id of order in App Store or Google play",
                    "type": "string"
                },
                "productId": {
                    "description": "ProductId identification of product",
                    "type": "string"
                },
                "transaction": {
                    "description": "Transaction token of payment received from shop",
                    "type": "string"
                },
                "userId": {
                    "description": "UserId unique user identification",
                    "type": "string"
                }
            }
        },
        "billing.Payment": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "OrderId": {
                    "type": "string"
                },
                "ProductId": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "billing.Product": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "LicenseId": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "billing.UpdateProduct": {
            "type": "object",
            "properties": {
                "licenseId": {
                    "description": "LicenseId identification number of license",
                    "type": "string"
                },
                "name": {
                    "description": "Name of product",
                    "type": "string"
                }
            }
        },
        "http.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code is error code provided by error producer",
                    "type": "string"
                },
                "details": {
                    "description": "Details is additional info provided by error producer",
                    "type": "object",
                    "additionalProperties": true
                },
                "message": {
                    "description": "Message is error description",
                    "type": "string"
                }
            }
        },
        "license.CreateLicenseRequest": {
            "type": "object",
            "properties": {
                "Duration": {
                    "type": "string"
                },
                "Locale": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "license.License": {
            "type": "object",
            "properties": {
                "Duration": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "Locale": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "license.UserLicense": {
            "type": "object",
            "properties": {
                "ExpiredAt": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "license.UserLicenses": {
            "type": "object",
            "properties": {
                "Licenses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/license.UserLicense"
                    }
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "timestamppb.Timestamp": {
            "type": "object",
            "properties": {
                "nanos": {
                    "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive.",
                    "type": "integer"
                },
                "seconds": {
                    "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.0.1",
	Host:        "",
	BasePath:    "/api",
	Schemes:     []string{},
	Title:       "Focusednow swagger",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
