// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	auth "firebase.google.com/go/auth"

	mock "github.com/stretchr/testify/mock"
)

// FirebaseAdapter is an autogenerated mock type for the FirebaseAdapter type
type FirebaseAdapter struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *FirebaseAdapter) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Init provides a mock function with given fields:
func (_m *FirebaseAdapter) Init() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// VerifyIDToken provides a mock function with given fields: ctx, idToken
func (_m *FirebaseAdapter) VerifyIDToken(ctx context.Context, idToken string) (*auth.Token, error) {
	ret := _m.Called(ctx, idToken)

	var r0 *auth.Token
	if rf, ok := ret.Get(0).(func(context.Context, string) *auth.Token); ok {
		r0 = rf(ctx, idToken)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*auth.Token)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, idToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
