// this file is generated by servgen util based on a template at 2021-06-26 10:37:24 +0300 MSK
package domain

import (
	"context"
	"time"

	"github.com/golang-jwt/jwt"
)

const (
	AuId            = "focused-now"
	RefreshTokenExp = 31 * 24 * time.Hour
	TokenExp        = 2 * time.Hour
)

type User struct {
	Id           string // Id - unique identifier
	Name         string
	Surname      string
	Avatar       string
	FirebaseUUID string     // firebase uuid for firebase user auth
	KundelikId   string     // unique identifier for kundelik integration
	Email        string     // email == login
	Password     string     // password
	CountryCode  string     // country code
	CreatedAt    time.Time  // CreatedAt - date of creation
	UpdatedAt    time.Time  // UpdatedAt - last update
	DeletedAt    *time.Time // DeletedAt - date of deletion
}

type Session struct {
	Id            string // Id - unique identifier
	UserId        string // id session owner
	DeviceName    string // device description
	ClientVersion string // client description
	RefreshToken  string // refresh token for jwt
	FCMToken      string // token firebase cloud messaging(push notification)
	CreatedAt     time.Time
}

// JWT claims struct.
type Token struct {
	AppId     string  `json:"aud"`
	UserId    string  `json:"sub"`
	SessionId string
	jwt.StandardClaims
}

type RefreshToken struct {
	UserId string
	jwt.StandardClaims
}

type AuthRequest struct {
	Email    string
	Password string
}

type OAuthRequest struct {
	Token string
}

type RegistrationUserRequest struct {
	Name     string
	Surname  string
	Email    string
	Password string
}

type UpdateUserRequest struct {
	Id          string
	Name        string
	Surname     string
	Email       string
	OldPassword string
	NewPassword string
	Avatar      string
	CountryCode string
}

type RefreshTokenRequest struct {
	UserId       string
	RefreshToken string
	SessionId    string
}

type FCMTokenRequest struct {
	UserId    string
	SessionId string
	FCMToken  string
}

type CloseSessionRequest struct {
	UserId    string
	SessionId string
}

type SetSessionInfoRequest struct {
	SessionId     string
	DeviceName    string
	ClientVersion string
}

type TokenPair struct {
	Token        string
	RefreshToken string
}

type AuthResponse struct {
	Token        string
	RefreshToken string
	User         User
}

type AuthService interface {
	// AuthUserByEmail authorizations user by login/pass
	AuthUserByEmail(ctx context.Context, req *AuthRequest) (*AuthResponse, error)
	// AuthUserByFirebase authorizations user throw firebase auth
	AuthUserByFirebase(ctx context.Context, req *OAuthRequest) (*AuthResponse, error)
	// RefreshAuthToken updates a jwt auth token
	RefreshToken(ctx context.Context, req *RefreshTokenRequest) (*TokenPair, error)
	// CreateUser creates User
	CreateUser(ctx context.Context, req *RegistrationUserRequest) (*User, error)
	// DeleteUser deletes User
	DeleteUser(ctx context.Context, id string) error
	// UpdateUser updates User
	UpdateUser(ctx context.Context, req *UpdateUserRequest) (*User, error)
	// GetUser gets user by id
	GetUserById(ctx context.Context, id string) (*User, error)
	// GetSessionByToken return session with user id
	GetSessionByToken(ctx context.Context, token string) (*Session, error)
	// SetSignKey init key for jwt signing
	SetSignKey(ctx context.Context, key string) error
	// SaveFCMUserToken save new fcm token
	SaveUserFCMToken(ctx context.Context, req *FCMTokenRequest) error
	// GetUserFCMTokens get all valid fcm tokens
	GetUserFCMTokens(ctx context.Context, id string) ([]string, error)
	// GetUserActiveSession
	GetUserSessions(ctx context.Context, id string) ([]*Session, error)
	// CloseSession close user session
	CloseSession(ctx context.Context, req *CloseSessionRequest) error
	// SetSessionInfo sets device name and client version
	SetSessionInfo(ctx context.Context, req *SetSessionInfoRequest) error
}
